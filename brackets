class MyStack:
    def __init__(self):
        # array
        self.stack = []

    def pop(self):
        if self.isempty():
            return None
        else:
            return self.stack.pop()

    def push(self, val):
        return self.stack.append(val)

    def peak(self):
        if self.isempty():
            return None
        else:
            return self.stack[-1]

    def size(self):
        return len(self.stack)

    def isempty(self):
        return self.size() == 0

    
def balancedornot(string):
    s = MyStack()
    # s is MyStack type
    balanced = True
    index = 0
    while index < len(string) and balanced:
        bracket = string[index]
        if bracket == "(":
            s.push(bracket)
        else:
            if s.isempty():
                balanced = False
            else:
                s.pop()

        index = index + 1

    if balanced and s.isempty():
        print('string is balanced')
    else:
        print ('it is unbalanced')


def main():
    balancedornot('((()()(()()()))')


main()
